version: '3'

vars:
  BUILD_DIR: build
  TARGET: visualizer

tasks:
  default:
    desc: "Show available tasks"
    cmd: task --list

  setup:
    desc: "Create build directory and configure cmake with vcpkg"
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - |
        if [ "{{OS}}" = "windows" ]; then
          cd {{.BUILD_DIR}} && cmake -DCMAKE_TOOLCHAIN_FILE="%VCPKG_INSTALLATION_ROOT%/scripts/buildsystems/vcpkg.cmake" ..
        else
          cd {{.BUILD_DIR}} && VCPKG_FEATURE_FLAGS=manifests cmake -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" ..
        fi
    sources:
      - CMakeLists.txt
      - "*/CMakeLists.txt"
      - vcpkg.json

  build:
    desc: "Build the project"
    deps: [setup]
    cmds:
      - cd {{.BUILD_DIR}} && cmake --build . --parallel {{.CORES | default "4"}}
    sources:
      - "**/*.cpp"
      - "**/*.cc"
      - "**/*.h"
      - "**/*.glsl"
      - CMakeLists.txt
      - "*/CMakeLists.txt"
    generates:
      - "{{.BUILD_DIR}}/{{.TARGET}}"

  run:
    desc: "Build and run the visualizer"
    deps: [build]
    cmds:
      - cp *.glsl {{.BUILD_DIR}}/
      - cd {{.BUILD_DIR}} && ./{{.TARGET}}

  clean:
    desc: "Clean build artifacts"
    cmd: rm -rf {{.BUILD_DIR}}

  rebuild:
    desc: "Clean and rebuild"
    cmds:
      - task: clean
      - task: build

  test-glfw:
    desc: "Build and run GLFW test"
    deps: [setup]
    cmds:
      - cd {{.BUILD_DIR}} && cmake --build . --target glfwmaintest --parallel {{.CORES | default "4"}}
      - cd {{.BUILD_DIR}} && ./glfwmaintest

  test:
    desc: "Build and run tests"
    deps: [setup]
    cmds:
      - cd {{.BUILD_DIR}} && cmake --build . --target tests --parallel {{.CORES | default "4"}}
      - cd {{.BUILD_DIR}} && ./tests/tests

  debug:
    desc: "Build with debug symbols and run with gdb"
    cmds:
      - mkdir -p {{.BUILD_DIR}}-debug
      - |
        if [ "{{OS}}" = "windows" ]; then
          cd {{.BUILD_DIR}}-debug && cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="%VCPKG_INSTALLATION_ROOT%/scripts/buildsystems/vcpkg.cmake" ..
        else
          cd {{.BUILD_DIR}}-debug && VCPKG_FEATURE_FLAGS=manifests cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" ..
        fi
      - cd {{.BUILD_DIR}}-debug && cmake --build . --parallel {{.CORES | default "4"}}
      - cd {{.BUILD_DIR}}-debug && gdb ./{{.TARGET}}

  release:
    desc: "Build optimized release version"
    cmds:
      - |
        if [ "{{OS}}" = "windows" ]; then
          cmake -B {{.BUILD_DIR}}-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="%VCPKG_INSTALLATION_ROOT%/scripts/buildsystems/vcpkg.cmake" .
        else
          VCPKG_FEATURE_FLAGS=manifests cmake -B {{.BUILD_DIR}}-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" .
        fi
      - cmake --build {{.BUILD_DIR}}-release --config Release --parallel {{.CORES | default "4"}}

  run-release:
    desc: "Build and run optimized release version"
    cmds:
      - task: release
      - cp *.glsl {{.BUILD_DIR}}-release/
      - cd {{.BUILD_DIR}}-release && ./{{.TARGET}}