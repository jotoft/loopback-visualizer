version: '3'

vars:
  BUILD_DIR: build
  TARGET: visualizer
  CORES: '{{.CORES | default "4"}}'


tasks:
  default:
    desc: Show available tasks
    cmd: task --list

  setup:
    desc: Configure CMake
    cmds:
      - cmake -B {{.BUILD_DIR}} -S .
    sources:
      - CMakeLists.txt
      - "**/CMakeLists.txt"

  build:
    desc: Build the project
    deps: [setup]
    cmds:
      - cmake --build {{.BUILD_DIR}} --parallel {{.CORES}}
    sources:
      - "**/*.{cpp,cc,h,glsl}"
      - CMakeLists.txt
      - "**/CMakeLists.txt"
    generates:
      - '{{.BUILD_DIR}}/{{.TARGET}}'

  run:
    desc: Build and run the visualizer
    deps: [build]
    cmds:
      - cp *.glsl {{.BUILD_DIR}}/
      - ./{{.BUILD_DIR}}/{{.TARGET}}

  clean:
    desc: Remove build artifacts
    cmd: rm -rf {{.BUILD_DIR}}*

  rebuild:
    desc: Clean and rebuild
    cmds:
      - task: clean
      - task: build

  test-glfw:
    desc: Build and run GLFW test
    deps: [setup]
    cmds:
      - cmake --build {{.BUILD_DIR}} --target glfwmaintest --parallel {{.CORES}}
      - ./{{.BUILD_DIR}}/glfwmaintest

  test:
    desc: Build and run tests
    deps: [setup]
    cmds:
      - cmake --build {{.BUILD_DIR}} --target tests --parallel {{.CORES}}
      - ctest --test-dir {{.BUILD_DIR}} --output-on-failure

  debug:
    desc: Build with debug symbols and run with gdb
    cmds:
      - cmake -B {{.BUILD_DIR}}-debug -S . -DCMAKE_BUILD_TYPE=Debug
      - cmake --build {{.BUILD_DIR}}-debug --parallel {{.CORES}}
      - cd {{.BUILD_DIR}}-debug && gdb ./{{.TARGET}}

  release:
    desc: Build optimized release version
    cmds:
      - cmake -B {{.BUILD_DIR}}-release -S . -DCMAKE_BUILD_TYPE=Release
      - cmake --build {{.BUILD_DIR}}-release --parallel {{.CORES}}

  run-release:
    desc: Build and run optimized release version
    deps: [release]
    cmds:
      - cp *.glsl {{.BUILD_DIR}}-release/
      - ./{{.BUILD_DIR}}-release/{{.TARGET}}
